[
  {
    "label": "A Beautiful Game",
    "name": "ABeautifulGame",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "ABeautifulGame.gltf"
    },
    "metadata_name": "A Beautiful Game",
    "summary": "Chess set using transmission and volume.",
    "description": "Chess set using transmission and volume."
  },
  {
    "label": "Alpha Blend Mode Test",
    "name": "AlphaBlendModeTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "AlphaBlendModeTest.gltf",
      "glTF-Binary": "AlphaBlendModeTest.glb",
      "glTF-Embedded": "AlphaBlendModeTest.gltf"
    },
    "metadata_name": "Alpha Blend Mode Test",
    "summary": "Tests alpha modes and settings.",
    "description": "Tests alpha modes and settings."
  },
  {
    "label": "Animated Cube",
    "name": "AnimatedCube",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "AnimatedCube.gltf"
    },
    "metadata_name": "Animated Cube",
    "summary": "Same as 'Cube', but having a linear rotation animation.",
    "description": "Same as 'Cube', but having a linear rotation animation."
  },
  {
    "label": "Animated Morph Cube",
    "name": "AnimatedMorphCube",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "AnimatedMorphCube.gltf",
      "glTF-Binary": "AnimatedMorphCube.glb",
      "glTF-Quantized": "AnimatedMorphCube.gltf"
    },
    "metadata_name": "Animated Morph Cube",
    "summary": "Demonstrates a simple cube with two simple morph targets and an animation that transitions between them both.",
    "description": "Demonstrates a simple cube with two simple morph targets and an animation that transitions between them both."
  },
  {
    "label": "AnimatedTriangle",
    "name": "AnimatedTriangle",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing",
      "written"
    ],
    "variants": {
      "glTF": "AnimatedTriangle.gltf",
      "glTF-Embedded": "AnimatedTriangle.gltf"
    }
  },
  {
    "label": "Anisotropy Barn Lamp",
    "name": "AnisotropyBarnLamp",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "AnisotropyBarnLamp.gltf",
      "glTF-Binary": "AnisotropyBarnLamp.glb",
      "glTF-KTX-BasisU": "AnisotropyBarnLamp.gltf"
    },
    "metadata_name": "Anisotropy Barn Lamp",
    "summary": "Wayfair AnisotropyBarnLamp model using anisotropy, clearcoat, emissive_strength, transmission, volume, and basisu extensions.",
    "description": "Wayfair AnisotropyBarnLamp model using anisotropy, clearcoat, emissive_strength, transmission, volume, and basisu extensions."
  },
  {
    "label": "Anisotropy Disc Test",
    "name": "AnisotropyDiscTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "AnisotropyDiscTest.gltf",
      "glTF-Binary": "AnisotropyDiscTest.glb"
    },
    "metadata_name": "Anisotropy Disc Test",
    "summary": "This model tests the texturemap for KHR_materials_anisotropy.",
    "description": "This model tests the texturemap for KHR_materials_anisotropy."
  },
  {
    "label": "Anisotropy Rotation Test",
    "name": "AnisotropyRotationTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "AnisotropyRotationTest.gltf",
      "glTF-Binary": "AnisotropyRotationTest.glb"
    },
    "metadata_name": "Anisotropy Rotation Test",
    "summary": "This model tests rotational offsets for KHR_materials_anisotropy.",
    "description": "This model tests rotational offsets for KHR_materials_anisotropy."
  },
  {
    "label": "Anisotropy Strength Test",
    "name": "AnisotropyStrengthTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "AnisotropyStrengthTest.gltf",
      "glTF-Binary": "AnisotropyStrengthTest.glb"
    },
    "metadata_name": "Anisotropy Strength Test",
    "summary": "This model tests the strength parameter for KHR_materials_anisotropy.",
    "description": "This model tests the strength parameter for KHR_materials_anisotropy."
  },
  {
    "label": "Antique Camera",
    "name": "AntiqueCamera",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing",
      "issues"
    ],
    "variants": {
      "glTF": "AntiqueCamera.gltf",
      "glTF-Binary": "AntiqueCamera.glb"
    },
    "metadata_name": "Antique Camera",
    "summary": "Static model of old camera on a tripod. [Issues: non-Khronos mark]",
    "description": "Static model of old camera on a tripod. [Issues: non-Khronos mark]"
  },
  {
    "label": "Attenuation Test",
    "name": "AttenuationTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "AttenuationTest.gltf",
      "glTF-Binary": "AttenuationTest.glb"
    },
    "metadata_name": "Attenuation Test",
    "summary": "Tests the interactions between attenuation, thickness, and scale.",
    "description": "Tests the interactions between attenuation, thickness, and scale."
  },
  {
    "label": "Avocado",
    "name": "Avocado",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Avocado.gltf",
      "glTF-Binary": "Avocado.glb",
      "glTF-Draco": "Avocado.gltf",
      "glTF-Quantized": "Avocado.gltf"
    },
    "metadata_name": "Avocado",
    "summary": "A natural object created with Core glTF 2.0",
    "description": "A natural object created with Core glTF 2.0"
  },
  {
    "label": "Barramundi Fish",
    "name": "BarramundiFish",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BarramundiFish.gltf",
      "glTF-Binary": "BarramundiFish.glb",
      "glTF-Draco": "BarramundiFish.gltf"
    },
    "metadata_name": "Barramundi Fish",
    "summary": "A fish created with Core glTF 2.0",
    "description": "A fish created with Core glTF 2.0"
  },
  {
    "label": "Boom Box",
    "name": "BoomBox",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BoomBox.gltf",
      "glTF-Binary": "BoomBox.glb",
      "glTF-Draco": "BoomBox.gltf"
    },
    "metadata_name": "Boom Box",
    "summary": "A common object with glowing front panel created with Core glTF 2.0.",
    "description": "A common object with glowing front panel created with Core glTF 2.0."
  },
  {
    "label": "Boom Box with Axes",
    "name": "BoomBoxWithAxes",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BoomBoxWithAxes.gltf"
    },
    "metadata_name": "Boom Box with Axes",
    "summary": "Shows X, Y, and Z axis default orientations.",
    "description": "Shows X, Y, and Z axis default orientations."
  },
  {
    "label": "Box",
    "name": "Box",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Box.gltf",
      "glTF-Binary": "Box.glb",
      "glTF-Draco": "Box.gltf",
      "glTF-Embedded": "Box.gltf"
    },
    "metadata_name": "Box",
    "summary": "One mesh and one material. Start with this.",
    "description": "One mesh and one material. Start with this."
  },
  {
    "label": "Box With Spaces",
    "name": "Box With Spaces",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Box With Spaces.gltf"
    },
    "metadata_name": "Box With Spaces",
    "summary": "Box with URI-encoded spaces in the texture names used by a simple PBR material.",
    "description": "Box with URI-encoded spaces in the texture names used by a simple PBR material."
  },
  {
    "label": "Box Animated",
    "name": "BoxAnimated",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BoxAnimated.gltf",
      "glTF-Binary": "BoxAnimated.glb",
      "glTF-Embedded": "BoxAnimated.gltf"
    },
    "metadata_name": "Box Animated",
    "summary": "Rotation and Translation Animations. Start with this to test animations.",
    "description": "Rotation and Translation Animations. Start with this to test animations."
  },
  {
    "label": "Box with interleaved position and normal attributes",
    "name": "BoxInterleaved",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BoxInterleaved.gltf",
      "glTF-Binary": "BoxInterleaved.glb",
      "glTF-Embedded": "BoxInterleaved.gltf"
    },
    "metadata_name": "Box with interleaved position and normal attributes",
    "summary": "Box example with interleaved position and normal attributes.",
    "description": "Box example with interleaved position and normal attributes."
  },
  {
    "label": "Box Textured",
    "name": "BoxTextured",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "issues",
      "testing"
    ],
    "variants": {
      "glTF": "BoxTextured.gltf",
      "glTF-Binary": "BoxTextured.glb",
      "glTF-Embedded": "BoxTextured.gltf"
    },
    "metadata_name": "Box Textured",
    "summary": "Box with a power-of-2 texture. [Issues: non-Khronos mark]",
    "description": "Box with a power-of-2 texture. [Issues: non-Khronos mark]"
  },
  {
    "label": "Box Textured not 2^N",
    "name": "BoxTexturedNonPowerOfTwo",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "issues",
      "testing"
    ],
    "variants": {
      "glTF": "BoxTexturedNonPowerOfTwo.gltf",
      "glTF-Binary": "BoxTexturedNonPowerOfTwo.glb",
      "glTF-Embedded": "BoxTexturedNonPowerOfTwo.gltf"
    },
    "metadata_name": "Box Textured not 2^N",
    "summary": "Box with a non-power-of-2 (NPOT) texture. Not all implementations support NPOT textures. [Issues: non-Khronos mark]",
    "description": "Box with a non-power-of-2 (NPOT) texture. Not all implementations support NPOT textures. [Issues: non-Khronos mark]"
  },
  {
    "label": "Box Vertex Colors",
    "name": "BoxVertexColors",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BoxVertexColors.gltf",
      "glTF-Binary": "BoxVertexColors.glb",
      "glTF-Embedded": "BoxVertexColors.gltf"
    },
    "metadata_name": "Box Vertex Colors",
    "summary": "A simple unit cube that uses vertex colors, stored in the `COLORS_0` attribute. ",
    "description": "A simple unit cube that uses vertex colors, stored in the `COLORS_0` attribute. "
  },
  {
    "label": "BrainStem",
    "name": "BrainStem",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "BrainStem.gltf",
      "glTF-Binary": "BrainStem.glb",
      "glTF-Draco": "BrainStem.gltf",
      "glTF-Embedded": "BrainStem.gltf"
    },
    "metadata_name": "BrainStem",
    "summary": "Animations. Skins.",
    "description": "Animations. Skins."
  },
  {
    "label": "Cameras",
    "name": "Cameras",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Cameras.gltf",
      "glTF-Embedded": "Cameras.gltf"
    },
    "metadata_name": "Cameras",
    "summary": "A sample with two different camera objects",
    "description": "A sample with two different camera objects"
  },
  {
    "label": "Carbon Fibre Ball",
    "name": "CarbonFibre",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension"
    ],
    "variants": {
      "glTF": "CarbonFibre.gltf",
      "glTF-Binary": "CarbonFibre.glb"
    },
    "metadata_name": "Carbon Fibre Ball",
    "summary": "Example of anisotropy applied to a ball with a simulated carbon fiber surface.",
    "description": "Example of anisotropy applied to a ball with a simulated carbon fiber surface."
  },
  {
    "label": "Cesium Man",
    "name": "CesiumMan",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "issues",
      "testing"
    ],
    "variants": {
      "glTF": "CesiumMan.gltf",
      "glTF-Binary": "CesiumMan.glb",
      "glTF-Draco": "CesiumMan.gltf",
      "glTF-Embedded": "CesiumMan.gltf"
    },
    "metadata_name": "Cesium Man",
    "summary": "Textured. Animations. Skins. [Issues: non-Khronos mark]",
    "description": "Textured. Animations. Skins. [Issues: non-Khronos mark]"
  },
  {
    "label": "Cesium Milk Truck",
    "name": "CesiumMilkTruck",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "issues",
      "testing"
    ],
    "variants": {
      "glTF": "CesiumMilkTruck.gltf",
      "glTF-Binary": "CesiumMilkTruck.glb",
      "glTF-Draco": "CesiumMilkTruck.gltf",
      "glTF-Embedded": "CesiumMilkTruck.gltf"
    },
    "metadata_name": "Cesium Milk Truck",
    "summary": "Textured. Multiple nodes/meshes. Animations. [Issues: non-Khronos mark]",
    "description": "Textured. Multiple nodes/meshes. Animations. [Issues: non-Khronos mark]"
  },
  {
    "label": "Chair Damask Purplegold",
    "name": "ChairDamaskPurplegold",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension"
    ],
    "variants": {
      "glTF": "ChairDamaskPurplegold.gltf"
    },
    "metadata_name": "Chair Damask Purplegold",
    "summary": "Use of sheen to create a high-end small seat (damask).",
    "description": "Use of sheen to create a high-end small seat (damask)."
  },
  {
    "label": "Clear Coat Car Paint",
    "name": "ClearCoatCarPaint",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "ClearCoatCarPaint.gltf",
      "glTF-Binary": "ClearCoatCarPaint.glb"
    },
    "metadata_name": "Clear Coat Car Paint",
    "summary": "This model is a sphere using the glTF ClearCoat extension overtop a car paint base material. ",
    "description": "This model is a sphere using the glTF ClearCoat extension overtop a car paint base material. "
  },
  {
    "label": "KHR_materials_clearcoat Test",
    "name": "ClearCoatTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "ClearCoatTest.gltf",
      "glTF-Binary": "ClearCoatTest.glb"
    },
    "metadata_name": "KHR_materials_clearcoat Test",
    "summary": "Tests if the KHR_materials_clearcoat extension is supported properly.",
    "description": "Tests if the KHR_materials_clearcoat extension is supported properly."
  },
  {
    "label": "Clearcoat Wicker",
    "name": "ClearcoatWicker",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "ClearcoatWicker.gltf",
      "glTF-Binary": "ClearcoatWicker.glb"
    },
    "metadata_name": "Clearcoat Wicker",
    "summary": "This model is a sphere using the glTF ClearCoat to create a wicker material covered with a wrinkled plastic clearcoat material.",
    "description": "This model is a sphere using the glTF ClearCoat to create a wicker material covered with a wrinkled plastic clearcoat material."
  },
  {
    "label": "Corset",
    "name": "Corset",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Corset.gltf",
      "glTF-Binary": "Corset.glb",
      "glTF-Draco": "Corset.gltf"
    },
    "metadata_name": "Corset",
    "summary": " ",
    "description": " "
  },
  {
    "label": "Cube",
    "name": "Cube",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Cube.gltf"
    },
    "metadata_name": "Cube",
    "summary": "A cube with non-smoothed faces.",
    "description": "A cube with non-smoothed faces."
  },
  {
    "label": "Damaged Helmet",
    "name": "DamagedHelmet",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "showcase",
      "testing",
      "video"
    ],
    "variants": {
      "glTF": "DamagedHelmet.gltf",
      "glTF-Binary": "DamagedHelmet.glb",
      "glTF-Embedded": "DamagedHelmet.gltf"
    },
    "metadata_name": "Damaged Helmet",
    "summary": "Flight helmet with damage",
    "description": "Flight helmet with damage"
  },
  {
    "label": "DiffuseTransmissionPlant",
    "name": "DiffuseTransmissionPlant",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "DiffuseTransmissionPlant.gltf",
      "glTF-Binary": "DiffuseTransmissionPlant.glb"
    },
    "metadata_name": "DiffuseTransmissionPlant",
    "summary": "Potted plant asset using Diffuse Transmission extension.",
    "description": "Potted plant asset using Diffuse Transmission extension."
  },
  {
    "label": "DiffuseTransmissionTeacup",
    "name": "DiffuseTransmissionTeacup",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "DiffuseTransmissionTeacup.gltf",
      "glTF-Binary": "DiffuseTransmissionTeacup.glb"
    },
    "metadata_name": "DiffuseTransmissionTeacup",
    "summary": "DiffuseTransmissionTeacup model using Diffuse Transmission extension.",
    "description": "DiffuseTransmissionTeacup model using Diffuse Transmission extension."
  },
  {
    "label": "Directional Light",
    "name": "DirectionalLight",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "DirectionalLight.gltf",
      "glTF-Binary": "DirectionalLight.glb"
    },
    "metadata_name": "Directional Light",
    "summary": "Verification of light calculations",
    "description": "Verification of light calculations"
  },
  {
    "label": "Dragon Attenuation",
    "name": "DragonAttenuation",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "DragonAttenuation.gltf",
      "glTF-Binary": "DragonAttenuation.glb"
    },
    "metadata_name": "Dragon Attenuation",
    "summary": "Dragon with background, using material variants, transmission, and volume.",
    "description": "Dragon with background, using material variants, transmission, and volume."
  },
  {
    "label": "Duck",
    "name": "Duck",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Duck.gltf",
      "glTF-Binary": "Duck.glb",
      "glTF-Draco": "Duck.gltf",
      "glTF-Embedded": "Duck.gltf",
      "glTF-Quantized": "Duck.gltf"
    },
    "metadata_name": "Duck",
    "summary": "The COLLADA duck. One texture.",
    "description": "The COLLADA duck. One texture."
  },
  {
    "label": "Emissive Strength Test",
    "name": "EmissiveStrengthTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "EmissiveStrengthTest.gltf",
      "glTF-Binary": "EmissiveStrengthTest.glb"
    },
    "metadata_name": "Emissive Strength Test",
    "summary": "Tests if the KHR_materials_emissive_strength extension is supported properly.",
    "description": "Tests if the KHR_materials_emissive_strength extension is supported properly."
  },
  {
    "label": "Environment Test",
    "name": "EnvironmentTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "EnvironmentTest.gltf",
      "glTF-IBL": "EnvironmentTest.gltf"
    },
    "metadata_name": "Environment Test",
    "summary": "A simple scene with metal and dielectric spheres that range between 0 and 1 roughness. Useful for testing environment lighting.",
    "description": "A simple scene with metal and dielectric spheres that range between 0 and 1 roughness. Useful for testing environment lighting."
  },
  {
    "label": "Flight Helmet",
    "name": "FlightHelmet",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "showcase",
      "testing"
    ],
    "variants": {
      "glTF": "FlightHelmet.gltf"
    },
    "metadata_name": "Flight Helmet",
    "summary": "Displayed flight helmet on a wooden stand.",
    "description": "Displayed flight helmet on a wooden stand."
  },
  {
    "label": "Fox",
    "name": "Fox",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Fox.gltf",
      "glTF-Binary": "Fox.glb"
    },
    "metadata_name": "Fox",
    "summary": "Multiple animations cycles: Survey, Walk, Run.",
    "description": "Multiple animations cycles: Survey, Walk, Run."
  },
  {
    "label": "GlamVelvetSofa",
    "name": "GlamVelvetSofa",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "GlamVelvetSofa.gltf",
      "glTF-Binary": "GlamVelvetSofa.glb"
    },
    "metadata_name": "GlamVelvetSofa",
    "summary": "Sofa using material variants, sheen, and specular.",
    "description": "Sofa using material variants, sheen, and specular."
  },
  {
    "label": "Glass Broken Window",
    "name": "GlassBrokenWindow",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "GlassBrokenWindow.gltf",
      "glTF-Binary": "GlassBrokenWindow.glb"
    },
    "metadata_name": "Glass Broken Window",
    "summary": "This asset demonstrates the combination of two transparency methods in glTF: KHR_materials_transmission for glass and alphaMode:'MASK' for holes in the broken glass.",
    "description": "This asset demonstrates the combination of two transparency methods in glTF: KHR_materials_transmission for glass and alphaMode:'MASK' for holes in the broken glass."
  },
  {
    "label": "Glass Hurricane Candle Holder",
    "name": "GlassHurricaneCandleHolder",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "video",
      "written",
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "GlassHurricaneCandleHolder.gltf",
      "glTF-Binary": "GlassHurricaneCandleHolder.glb"
    },
    "metadata_name": "Glass Hurricane Candle Holder",
    "summary": "Glass holder using Materials Tranmission and Materials Volume extensions.",
    "description": "Glass holder using Materials Tranmission and Materials Volume extensions."
  },
  {
    "label": "Glass Vase with Flowers",
    "name": "GlassVaseFlowers",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "GlassVaseFlowers.gltf",
      "glTF-Binary": "GlassVaseFlowers.glb"
    },
    "metadata_name": "Glass Vase with Flowers",
    "summary": "This model compares transparency methods for representing glass in glTF: alphaMode:'BLEND' (left) versus the extensions KHR_materials_transmission and KHR_materials_volume (right).",
    "description": "This model compares transparency methods for representing glass in glTF: alphaMode:'BLEND' (left) versus the extensions KHR_materials_transmission and KHR_materials_volume (right)."
  },
  {
    "label": "glTFPotOfCoals",
    "name": "glTFPotOfCoals",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "glTFPotOfCoals.gltf",
      "glTF-Animation": "glTFPotOfCoals_HeatAnimation.glb",
      "glTF-Binary": "glTFPotOfCoals.glb"
    }
  },
  {
    "label": "Interpolation Test",
    "name": "InterpolationTest",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "InterpolationTest.gltf",
      "glTF-Binary": "InterpolationTest.glb"
    },
    "metadata_name": "Interpolation Test",
    "summary": "A sample with three different animation interpolations",
    "description": "A sample with three different animation interpolations"
  },
  {
    "label": "IORTestGrid",
    "name": "IORTestGrid",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "IORTestGrid.gltf",
      "glTF-Binary": "IORTestGrid.glb"
    },
    "metadata_name": "IORTestGrid",
    "summary": "Grid of spheres over a checkered backdrop to test IOR rendering.",
    "description": "Grid of spheres over a checkered backdrop to test IOR rendering."
  },
  {
    "label": "IridescenceAbalone",
    "name": "IridescenceAbalone",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension"
    ],
    "variants": {
      "glTF": "IridescenceAbalone.gltf",
      "glTF-Binary": "IridescenceAbalone.glb"
    },
    "metadata_name": "IridescenceAbalone",
    "summary": "A model of an abalone shell with highly iridescent interior.",
    "description": "A model of an abalone shell with highly iridescent interior."
  },
  {
    "label": "Iridescence Dielectric Spheres",
    "name": "IridescenceDielectricSpheres",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "IridescenceDielectricSpheres.gltf"
    },
    "metadata_name": "Iridescence Dielectric Spheres",
    "summary": "Tests KHR_materials_iridescence on a non-metallic material.",
    "description": "Tests KHR_materials_iridescence on a non-metallic material."
  },
  {
    "label": "Iridescence Lamp",
    "name": "IridescenceLamp",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "IridescenceLamp.gltf",
      "glTF-Binary": "IridescenceLamp.glb"
    },
    "metadata_name": "Iridescence Lamp",
    "summary": "Wayfair Lamp model using transmission, volume, and KHR_materials_iridescence.",
    "description": "Wayfair Lamp model using transmission, volume, and KHR_materials_iridescence."
  },
  {
    "label": "Iridescence Metallic Spheres",
    "name": "IridescenceMetallicSpheres",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "IridescenceMetallicSpheres.gltf"
    },
    "metadata_name": "Iridescence Metallic Spheres",
    "summary": "Tests KHR_materials_iridescence on a metallic material.",
    "description": "Tests KHR_materials_iridescence on a metallic material."
  },
  {
    "label": "Iridescence Suzanne",
    "name": "IridescenceSuzanne",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "IridescenceSuzanne.gltf",
      "glTF-Binary": "IridescenceSuzanne.glb"
    },
    "metadata_name": "Iridescence Suzanne",
    "summary": "Further tests KHR_materials_iridescence.",
    "description": "Further tests KHR_materials_iridescence."
  },
  {
    "label": "Iridescent Dish with Olives",
    "name": "IridescentDishWithOlives",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "IridescentDishWithOlives.gltf",
      "glTF-Binary": "IridescentDishWithOlives.glb"
    },
    "metadata_name": "Iridescent Dish with Olives",
    "summary": "Dish using transmission, volume, IOR, and specular. [Issues: non-Khronos mark]",
    "description": "Dish using transmission, volume, IOR, and specular. [Issues: non-Khronos mark]"
  },
  {
    "label": "Lantern",
    "name": "Lantern",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Lantern.gltf",
      "glTF-Binary": "Lantern.glb",
      "glTF-Draco": "Lantern.gltf",
      "glTF-Quantized": "Lantern.gltf"
    },
    "metadata_name": "Lantern",
    "summary": "Old wooden street light.",
    "description": "Old wooden street light."
  },
  {
    "label": "Lamp with Punctual Lights",
    "name": "LightsPunctualLamp",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "LightsPunctualLamp.gltf",
      "glTF-Binary": "LightsPunctualLamp.glb"
    },
    "metadata_name": "Lamp with Punctual Lights",
    "summary": "Lamp using punctual lights.",
    "description": "Lamp using punctual lights."
  },
  {
    "label": "MandarinOrange",
    "name": "MandarinOrange",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "MandarinOrange.gltf"
    },
    "metadata_name": "MandarinOrange",
    "summary": "Scattering of light through the tangerine using the glTF diffuse transmission extension is shown in this test.",
    "description": "Scattering of light through the tangerine using the glTF diffuse transmission extension is shown in this test."
  },
  {
    "label": "Materials Variants Shoe",
    "name": "MaterialsVariantsShoe",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension",
      "showcase",
      "written"
    ],
    "variants": {
      "glTF": "MaterialsVariantsShoe.gltf",
      "glTF-Binary": "MaterialsVariantsShoe.glb"
    },
    "metadata_name": "Materials Variants Shoe",
    "summary": "A model of a shoe that illustrates use of the KHR_materials_variants extension with three materials included in the asset.",
    "description": "A model of a shoe that illustrates use of the KHR_materials_variants extension with three materials included in the asset."
  },
  {
    "label": "Mesh Primitive Modes",
    "name": "MeshPrimitiveModes",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "testing"
    ],
    "variants": {
      "glTF": "MeshPrimitiveModes.gltf",
      "glTF-Embedded": "MeshPrimitiveModes.gltf"
    },
    "metadata_name": "Mesh Primitive Modes",
    "summary": "An example that shows rendering modes that are supported for mesh primitives in glTF.",
    "description": "An example that shows rendering modes that are supported for mesh primitives in glTF."
  },
  {
    "label": "Metal-Rough Spheres",
    "name": "MetalRoughSpheres",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "MetalRoughSpheres.gltf",
      "glTF-Binary": "MetalRoughSpheres.glb",
      "glTF-Embedded": "MetalRoughSpheres.gltf"
    },
    "metadata_name": "Metal-Rough Spheres",
    "summary": "Tests various metal and roughness values (texture mapped).",
    "description": "Tests various metal and roughness values (texture mapped)."
  },
  {
    "label": "Metal-Rough Spheres (textureless)",
    "name": "MetalRoughSpheresNoTextures",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "MetalRoughSpheresNoTextures.gltf",
      "glTF-Binary": "MetalRoughSpheresNoTextures.glb"
    },
    "metadata_name": "Metal-Rough Spheres (textureless)",
    "summary": "Tests various metal and roughness values (textureless).",
    "description": "Tests various metal and roughness values (textureless)."
  },
  {
    "label": "Morph-Primitives Test",
    "name": "MorphPrimitivesTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "MorphPrimitivesTest.gltf",
      "glTF-Binary": "MorphPrimitivesTest.glb",
      "glTF-Draco": "MorphPrimitivesTest.gltf"
    },
    "metadata_name": "Morph-Primitives Test",
    "summary": "Tests a morph target on multiple primitives.",
    "description": "Tests a morph target on multiple primitives."
  },
  {
    "label": "Morph Stress Test",
    "name": "MorphStressTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "MorphStressTest.gltf",
      "glTF-Binary": "MorphStressTest.glb"
    },
    "metadata_name": "Morph Stress Test",
    "summary": "Tests up to 8 morph targets.",
    "description": "Tests up to 8 morph targets."
  },
  {
    "label": "Mosquito In Amber",
    "name": "MosquitoInAmber",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "MosquitoInAmber.gltf",
      "glTF-Binary": "MosquitoInAmber.glb"
    },
    "metadata_name": "Mosquito In Amber",
    "summary": "Mosquito in amber by Sketchfab, using transmission, IOR, and volume.",
    "description": "Mosquito in amber by Sketchfab, using transmission, IOR, and volume."
  },
  {
    "label": "Multiple Scenes",
    "name": "MultipleScenes",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "MultipleScenes.gltf",
      "glTF-Embedded": "MultipleScenes.gltf"
    },
    "metadata_name": "Multiple Scenes",
    "summary": "A simple glTF asset with two scenes. Each scene consists of one node with one mesh. ",
    "description": "A simple glTF asset with two scenes. Each scene consists of one node with one mesh. "
  },
  {
    "label": "MultiUV Test",
    "name": "MultiUVTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "MultiUVTest.gltf",
      "glTF-Binary": "MultiUVTest.glb",
      "glTF-Embedded": "MultiUVTest.gltf"
    },
    "metadata_name": "MultiUV Test",
    "summary": "This model has two uv texture coordinates and tests a second set of texture coordinates.",
    "description": "This model has two uv texture coordinates and tests a second set of texture coordinates."
  },
  {
    "label": "Negative Scale Test",
    "name": "NegativeScaleTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "NegativeScaleTest.gltf",
      "glTF-Binary": "NegativeScaleTest.glb"
    },
    "metadata_name": "Negative Scale Test",
    "summary": "This model tests what happens when a glTF node has negative scaling.",
    "description": "This model tests what happens when a glTF node has negative scaling."
  },
  {
    "label": "Normal-Tangent Mirror Test",
    "name": "NormalTangentMirrorTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "NormalTangentMirrorTest.gltf",
      "glTF-Binary": "NormalTangentMirrorTest.glb",
      "glTF-Embedded": "NormalTangentMirrorTest.gltf"
    },
    "metadata_name": "Normal-Tangent Mirror Test",
    "summary": "Tests an engine's ability to load supplied tangent vectors for a normal map.",
    "description": "Tests an engine's ability to load supplied tangent vectors for a normal map."
  },
  {
    "label": "Normal-Tangent Test",
    "name": "NormalTangentTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "NormalTangentTest.gltf",
      "glTF-Binary": "NormalTangentTest.glb",
      "glTF-Embedded": "NormalTangentTest.gltf"
    },
    "metadata_name": "Normal-Tangent Test",
    "summary": "Tests an engine's ability to automatically generate tangent vectors for a normal map.",
    "description": "Tests an engine's ability to automatically generate tangent vectors for a normal map."
  },
  {
    "label": "Orientation Test",
    "name": "OrientationTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "OrientationTest.gltf",
      "glTF-Binary": "OrientationTest.glb",
      "glTF-Embedded": "OrientationTest.gltf"
    },
    "metadata_name": "Orientation Test",
    "summary": "Tests node translations and rotations.",
    "description": "Tests node translations and rotations."
  },
  {
    "label": "Primitive Mode Normals Test",
    "name": "PrimitiveModeNormalsTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "issues",
      "testing"
    ],
    "variants": {
      "glTF": "PrimitiveModeNormalsTest.gltf"
    },
    "metadata_name": "Primitive Mode Normals Test",
    "summary": "Tests rendering of points, lines, and triangles with and without normals.",
    "description": "Tests rendering of points, lines, and triangles with and without normals."
  },
  {
    "label": "Recursive Skeletons",
    "name": "RecursiveSkeletons",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing",
      "issues"
    ],
    "variants": {
      "glTF": "RecursiveSkeletons.gltf",
      "glTF-Binary": "RecursiveSkeletons.glb"
    },
    "metadata_name": "Recursive Skeletons",
    "summary": "Tests unusual skinning cases with reused meshes and recursive skeletons.",
    "description": "Tests unusual skinning cases with reused meshes and recursive skeletons."
  },
  {
    "label": "Rigged Figure",
    "name": "RiggedFigure",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "RiggedFigure.gltf",
      "glTF-Binary": "RiggedFigure.glb",
      "glTF-Draco": "RiggedFigure.gltf",
      "glTF-Embedded": "RiggedFigure.gltf"
    },
    "metadata_name": "Rigged Figure",
    "summary": "Animations. Skins.",
    "description": "Animations. Skins."
  },
  {
    "label": "Rigged Simple",
    "name": "RiggedSimple",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "RiggedSimple.gltf",
      "glTF-Binary": "RiggedSimple.glb",
      "glTF-Draco": "RiggedSimple.gltf",
      "glTF-Embedded": "RiggedSimple.gltf"
    },
    "metadata_name": "Rigged Simple",
    "summary": "Animations. Skins. Start with this to test skinning.",
    "description": "Animations. Skins. Start with this to test skinning."
  },
  {
    "label": "SciFi Helmet",
    "name": "SciFiHelmet",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "SciFiHelmet.gltf"
    },
    "metadata_name": "SciFi Helmet",
    "summary": "Futuristic helmet",
    "description": "Futuristic helmet"
  },
  {
    "label": "SheenChair",
    "name": "SheenChair",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "SheenChair.gltf",
      "glTF-Binary": "SheenChair.glb"
    },
    "metadata_name": "SheenChair",
    "summary": "Chair using material variants and sheen.",
    "description": "Chair using material variants and sheen."
  },
  {
    "label": "Sheen Cloth",
    "name": "SheenCloth",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "SheenCloth.gltf"
    },
    "metadata_name": "Sheen Cloth",
    "summary": "Fabric example using sheen.",
    "description": "Fabric example using sheen."
  },
  {
    "label": "SheenTestGrid",
    "name": "SheenTestGrid",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "SheenTestGrid.gltf",
      "glTF-Binary": "SheenTestGrid.glb"
    },
    "metadata_name": "SheenTestGrid",
    "summary": "Grid of spheres over a checkered backdrop to test Sheen rendering.",
    "description": "Grid of spheres over a checkered backdrop to test Sheen rendering."
  },
  {
    "label": "Simple Instancing",
    "name": "SimpleInstancing",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "SimpleInstancing.gltf",
      "glTF-Binary": "SimpleInstancing.glb"
    },
    "metadata_name": "Simple Instancing",
    "summary": "A simple example for the EXT_mesh_gpu_instancing extension.",
    "description": "A simple example for the EXT_mesh_gpu_instancing extension."
  },
  {
    "label": "SimpleMeshes",
    "name": "SimpleMeshes",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing",
      "written"
    ],
    "variants": {
      "glTF": "SimpleMeshes.gltf",
      "glTF-Embedded": "SimpleMeshes.gltf"
    }
  },
  {
    "label": "SimpleMorph",
    "name": "SimpleMorph",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "SimpleMorph.gltf",
      "glTF-Embedded": "SimpleMorph.gltf"
    }
  },
  {
    "label": "SimpleSkin",
    "name": "SimpleSkin",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing",
      "written"
    ],
    "variants": {
      "glTF": "SimpleSkin.gltf",
      "glTF-Embedded": "SimpleSkin.gltf"
    }
  },
  {
    "label": "SimpleSparseAccessor",
    "name": "SimpleSparseAccessor",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "SimpleSparseAccessor.gltf",
      "glTF-Embedded": "SimpleSparseAccessor.gltf"
    }
  },
  {
    "label": "SpecGlossVsMetalRough",
    "name": "SpecGlossVsMetalRough",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "SpecGlossVsMetalRough.gltf",
      "glTF-Binary": "SpecGlossVsMetalRough.glb"
    },
    "metadata_name": "SpecGlossVsMetalRough",
    "summary": "Tests if the KHR_materials_pbrSpecularGlossiness extension is supported properly.",
    "description": "Tests if the KHR_materials_pbrSpecularGlossiness extension is supported properly."
  },
  {
    "label": "SpecularSilkPouf",
    "name": "SpecularSilkPouf",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "SpecularSilkPouf.gltf",
      "glTF-Binary": "SpecularSilkPouf.glb"
    },
    "metadata_name": "SpecularSilkPouf",
    "summary": "Wayfair SpecularSilkPouf model using sheen and specular extensions.",
    "description": "Wayfair SpecularSilkPouf model using sheen and specular extensions."
  },
  {
    "label": "Specular Test",
    "name": "SpecularTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "SpecularTest.gltf",
      "glTF-Binary": "SpecularTest.glb"
    },
    "metadata_name": "Specular Test",
    "summary": "Tests if the KHR_materials_specular extension is supported correctly.",
    "description": "Tests if the KHR_materials_specular extension is supported correctly."
  },
  {
    "label": "Sponza",
    "name": "Sponza",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core"
    ],
    "variants": {
      "glTF": "Sponza.gltf"
    },
    "metadata_name": "Sponza",
    "summary": "Building interior, often used to test lighting.",
    "description": "Building interior, often used to test lighting."
  },
  {
    "label": "StainedGlassLamp",
    "name": "StainedGlassLamp",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "StainedGlassLamp.gltf",
      "glTF-JPG-PNG": "StainedGlassLamp.gltf",
      "glTF-KTX-BasisU": "StainedGlassLamp.gltf"
    },
    "metadata_name": "StainedGlassLamp",
    "summary": " ",
    "description": " "
  },
  {
    "label": "Suzanne",
    "name": "Suzanne",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Suzanne.gltf"
    },
    "metadata_name": "Suzanne",
    "summary": "Blender's test model of the chimpanzee Suzanne.",
    "description": "Blender's test model of the chimpanzee Suzanne."
  },
  {
    "label": "Texture Coordinate Test",
    "name": "TextureCoordinateTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "TextureCoordinateTest.gltf",
      "glTF-Binary": "TextureCoordinateTest.glb",
      "glTF-Embedded": "TextureCoordinateTest.gltf"
    },
    "metadata_name": "Texture Coordinate Test",
    "summary": "Shows how XYZ and UV positions relate to displayed geometry.",
    "description": "Shows how XYZ and UV positions relate to displayed geometry."
  },
  {
    "label": "Texture Encoding Test",
    "name": "TextureEncodingTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "TextureEncodingTest.gltf",
      "glTF-Binary": "TextureEncodingTest.glb"
    },
    "metadata_name": "Texture Encoding Test",
    "summary": "This asset tests that textures are sampled with correct transfer functions.",
    "description": "This asset tests that textures are sampled with correct transfer functions."
  },
  {
    "label": "Texture Linear Interpolation Test",
    "name": "TextureLinearInterpolationTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "TextureLinearInterpolationTest.gltf",
      "glTF-Binary": "TextureLinearInterpolationTest.glb"
    },
    "metadata_name": "Texture Linear Interpolation Test",
    "summary": "Tests that linear texture interpolation is performed on linear values, i.e. after sRGB decoding.",
    "description": "Tests that linear texture interpolation is performed on linear values, i.e. after sRGB decoding."
  },
  {
    "label": "Texture Settings Test",
    "name": "TextureSettingsTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "TextureSettingsTest.gltf",
      "glTF-Binary": "TextureSettingsTest.glb",
      "glTF-Embedded": "TextureSettingsTest.gltf"
    },
    "metadata_name": "Texture Settings Test",
    "summary": "Tests single/double-sided and various texturing modes.",
    "description": "Tests single/double-sided and various texturing modes."
  },
  {
    "label": "Texture Transform Multi Test",
    "name": "TextureTransformMultiTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "TextureTransformMultiTest.gltf",
      "glTF-Binary": "TextureTransformMultiTest.glb"
    },
    "metadata_name": "Texture Transform Multi Test",
    "summary": "Tests if the KHR_texture_transform extension is supported for several inputs.",
    "description": "Tests if the KHR_texture_transform extension is supported for several inputs."
  },
  {
    "label": "Texture Transform Test",
    "name": "TextureTransformTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "TextureTransformTest.gltf"
    },
    "metadata_name": "Texture Transform Test",
    "summary": "Tests if the KHR_texture_transform extension is supported for BaseColor.",
    "description": "Tests if the KHR_texture_transform extension is supported for BaseColor."
  },
  {
    "label": "Toy Car",
    "name": "ToyCar",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "video",
      "extension"
    ],
    "variants": {
      "glTF": "ToyCar.gltf",
      "glTF-Binary": "ToyCar.glb"
    },
    "metadata_name": "Toy Car",
    "summary": "Toy car example using transmission, clearcoat, and sheen.",
    "description": "Toy car example using transmission, clearcoat, and sheen."
  },
  {
    "label": "Transmission Roughness Test",
    "name": "TransmissionRoughnessTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "TransmissionRoughnessTest.gltf",
      "glTF-Binary": "TransmissionRoughnessTest.glb"
    },
    "metadata_name": "Transmission Roughness Test",
    "summary": "Tests the interaction between roughness and IOR.",
    "description": "Tests the interaction between roughness and IOR."
  },
  {
    "label": "Transmission Test",
    "name": "TransmissionTest",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "TransmissionTest.gltf",
      "glTF-Binary": "TransmissionTest.glb"
    },
    "metadata_name": "Transmission Test",
    "summary": "Tests if the KHR_materials_transmission extension is supported properly.",
    "description": "Tests if the KHR_materials_transmission extension is supported properly."
  },
  {
    "label": "TransmissionThinwallTestGrid",
    "name": "TransmissionThinwallTestGrid",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "showcase",
      "extension"
    ],
    "variants": {
      "glTF": "TransmissionThinwallTestGrid.gltf",
      "glTF-Binary": "TransmissionThinwallTestGrid.glb"
    },
    "metadata_name": "TransmissionThinwallTestGrid",
    "summary": "Grid of spheres over a checkered backdrop to test Thinfilm and IOR rendering.",
    "description": "Grid of spheres over a checkered backdrop to test Thinfilm and IOR rendering."
  },
  {
    "label": "Triangle",
    "name": "Triangle",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing",
      "written"
    ],
    "variants": {
      "glTF": "Triangle.gltf",
      "glTF-Embedded": "Triangle.gltf"
    },
    "metadata_name": "Triangle",
    "summary": "A very simple glTF asset: The basic structure is the same as in 'Triangle Without Indices', but here, the mesh primitive describes an indexed geometry.",
    "description": "A very simple glTF asset: The basic structure is the same as in 'Triangle Without Indices', but here, the mesh primitive describes an indexed geometry."
  },
  {
    "label": "TriangleWithoutIndices",
    "name": "TriangleWithoutIndices",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "TriangleWithoutIndices.gltf",
      "glTF-Embedded": "TriangleWithoutIndices.gltf"
    }
  },
  {
    "label": "Two Sided Plane",
    "name": "TwoSidedPlane",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core"
    ],
    "variants": {
      "glTF": "TwoSidedPlane.gltf"
    },
    "metadata_name": "Two Sided Plane",
    "summary": "A plane having the two sided material parameter enabled.",
    "description": "A plane having the two sided material parameter enabled."
  },
  {
    "label": "Unicode❤♻Test",
    "name": "Unicode❤♻Test",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "Unicode❤♻Test.gltf",
      "glTF-Binary": "Unicode❤♻Test.glb"
    },
    "metadata_name": "Unicode❤♻Test",
    "summary": "A sample with Unicode characters in file, material, and mesh names",
    "description": "A sample with Unicode characters in file, material, and mesh names"
  },
  {
    "label": "Unlit Test",
    "name": "UnlitTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "testing",
      "extension"
    ],
    "variants": {
      "glTF": "UnlitTest.gltf",
      "glTF-Binary": "UnlitTest.glb"
    },
    "metadata_name": "Unlit Test",
    "summary": "Tests if the KHR_materials_unlit extension is supported properly.",
    "description": "Tests if the KHR_materials_unlit extension is supported properly."
  },
  {
    "label": "Vertex Color Test",
    "name": "VertexColorTest",
    "screenshot": "screenshot/screenshot.png",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "VertexColorTest.gltf",
      "glTF-Binary": "VertexColorTest.glb",
      "glTF-Embedded": "VertexColorTest.gltf"
    },
    "metadata_name": "Vertex Color Test",
    "summary": "Tests if vertex colors are supported.",
    "description": "Tests if vertex colors are supported."
  },
  {
    "label": "Virtual City",
    "name": "VirtualCity",
    "screenshot": "screenshot/screenshot.gif",
    "tags": [
      "core",
      "testing"
    ],
    "variants": {
      "glTF": "VirtualCity.gltf",
      "glTF-Binary": "VirtualCity.glb",
      "glTF-Draco": "VirtualCity.gltf",
      "glTF-Embedded": "VirtualCity.gltf"
    },
    "metadata_name": "Virtual City",
    "summary": "The 'Virtual City' model was graciously contributed by the folks at 3DRT.",
    "description": "The 'Virtual City' model was graciously contributed by the folks at 3DRT."
  },
  {
    "label": "Water Bottle",
    "name": "WaterBottle",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "core",
      "testing",
      "written"
    ],
    "variants": {
      "glTF": "WaterBottle.gltf",
      "glTF-Binary": "WaterBottle.glb",
      "glTF-Draco": "WaterBottle.gltf"
    },
    "metadata_name": "Water Bottle",
    "summary": "Basic metal/roughness water bottle.",
    "description": "Basic metal/roughness water bottle."
  },
  {
    "label": "Xmp Metadata Rounded Cube",
    "name": "XmpMetadataRoundedCube",
    "screenshot": "screenshot/screenshot.jpg",
    "tags": [
      "extension",
      "testing"
    ],
    "variants": {
      "glTF": "XmpMetadataRoundedCube.gltf",
      "glTF-Binary": "XmpMetadataRoundedCube.glb"
    },
    "metadata_name": "Xmp Metadata Rounded Cube",
    "summary": "Test of the XMP metadata extension - KHR_xmp_json_ld.",
    "description": "Test of the XMP metadata extension - KHR_xmp_json_ld."
  },
  {
    "name": "Animated Triangle",
    "metadata_name": "Animated Triangle",
    "summary": "This sample is similar to the Triangle, but the node has a rotation property that is modified with a simple animation",
    "description": "This sample is similar to the Triangle, but the node has a rotation property that is modified with a simple animation"
  },
  {
    "name": "Dispersion Test",
    "metadata_name": "Dispersion Test",
    "summary": "This model tests the KHR_materials_dispersion extension.",
    "description": "This model tests the KHR_materials_dispersion extension."
  },
  {
    "name": "Dragon Dispersion",
    "metadata_name": "Dragon Dispersion",
    "summary": "Dragon with background, using dispersion, transmission, and volume.",
    "description": "Dragon with background, using dispersion, transmission, and volume."
  },
  {
    "name": "PotOfCoals",
    "metadata_name": "PotOfCoals",
    "summary": "Burnt copper pot with a clearcoat, containing emissive hot coals.",
    "description": "Burnt copper pot with a clearcoat, containing emissive hot coals."
  },
  {
    "name": "Simple Material",
    "metadata_name": "Simple Material",
    "summary": "A simple glTF asset with a material",
    "description": "A simple glTF asset with a material"
  },
  {
    "name": "Simple Meshes",
    "metadata_name": "Simple Meshes",
    "summary": "A simple scene with two nodes, both containing the same mesh, namely a mesh with a single mesh.primitive with a single indexed triangle with multiple attributes (positions, normals and texture coordinates), but without a material",
    "description": "A simple scene with two nodes, both containing the same mesh, namely a mesh with a single mesh.primitive with a single indexed triangle with multiple attributes (positions, normals and texture coordinates), but without a material"
  },
  {
    "name": "Simple Morph",
    "metadata_name": "Simple Morph",
    "summary": "A triangle with a morph animation applied",
    "description": "A triangle with a morph animation applied"
  },
  {
    "name": "Simple Skin",
    "metadata_name": "Simple Skin",
    "summary": "A simple example of vertex skinning in glTF",
    "description": "A simple example of vertex skinning in glTF"
  },
  {
    "name": "Simple Sparse Accessor",
    "metadata_name": "Simple Sparse Accessor",
    "summary": "A simple mesh that uses sparse accessors",
    "description": "A simple mesh that uses sparse accessors"
  },
  {
    "name": "Simple Texture",
    "metadata_name": "Simple Texture",
    "summary": "A simple glTF asset with a texture",
    "description": "A simple glTF asset with a texture"
  },
  {
    "name": "Triangle Without Indices",
    "metadata_name": "Triangle Without Indices",
    "summary": "The simplest possible glTF asset: A single scene with a single node and a single mesh with a single mesh.primitive with a single triangle with a single attribute, without indices and without a material",
    "description": "The simplest possible glTF asset: A single scene with a single node and a single mesh with a single mesh.primitive with a single triangle with a single attribute, without indices and without a material"
  }
]